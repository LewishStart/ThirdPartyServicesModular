apply plugin: 'channel'
ext {
    channelFilePath = file("../channel.txt")
//    baseReleaseApk = file()
//    tinkerEnable = true
//    tinkerOldApkPath = "${bakPath}/TinkerGradleDemo-release-0207-105425.apk"
//    tinkerID = "1.0"
//    tinkerApplyMappingPath = "${bakPath}/TinkerGradleDemo-release-0207-105425-mapping.txt"
//    tinkerApplyResourcePath = "${bakPath}/TinkerGradleDemo-release-0207-105425-R.txt"
//    patchMessage = "fix the 1.0 version's bugs"
//    patchVersion = "1.0"
//    isProtectedApp = false
}
def getChannelFile(){
    return ext.channelFilePath
}
channel {
    //指定渠道文件
    channelFile = getChannelFile()
    //多渠道包的输出目录，默认为new File(project.buildDir,"channel")
    baseOutputDir = new File(project.buildDir, "channel")
    //多渠道包的命名规则，默认为：${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}
    apkNameFormat = '${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}'
    //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）
    isFastMode = false
    //buildTime的时间格式，默认格式：yyyyMMdd-HHmmss
    buildTimeDateFormat = 'yyyyMMdd-HH:mm:ss'
    //低内存模式（仅针对V2签名，默认为false）：只把签名块、中央目录和EOCD读取到内存，不把最大头的内容块读取到内存，在手机上合成APK时，可以使用该模式
    lowMemory = false
}
//rebuildChannel {
//    //指定渠道文件
//    channelFile = file("/Users/leon/Downloads/testReChannel.txt")
//    baseReleaseApk = 已有Release APK
//    //默认为new File(project.buildDir, "rebuildChannel/debug")
//    debugOutputDir = Debug渠道包输出目录
//    //默认为new File(project.buildDir, "rebuildChannel/release")
//    releaseOutputDir = Release渠道包输出目录
//    //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）
//    isFastMode = false
//    //低内存模式（仅针对V2签名，默认为false）：只把签名块、中央目录和EOCD读取到内存，不把最大头的内容块读取到内存，在手机上合成APK时，可以使用该模式
//    lowMemory = false
//}
dependencies {
    api 'com.leon.channel:helper:2.0.0'
}